##############################################################################
# Copyright (c) 2015 EMC and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

heat_template_version: 2013-05-23

parameters:
  public_network:
    type: string
    constraints:
        - custom_constraint: neutron.network
  flavor:
    type: string
    default: "m1.small"
  key_name:
    type: string
    default: StorPerf
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 1
    constraints:
      - range: { min: 1, max: 1024 }
        description: must be between 1 and 1024 Gb.
  agent_count:
    type: number
    default: 1
    constraints:
      - range: { min: 1, max: 512 }
        description: must be between 1 and 512 agents.


resources:
  slaves:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: agent_count}
      resource_def: {
        type: "storperf-agent.yaml",
        properties: {
          public_network: {get_param: public_network},
          agent_network: {get_resource: storperf_network},
          flavor: {get_param: flavor},
          key_name: {get_param: key_name},
          volume_size: {get_param: volume_size}
        }
      }

  storperf_network:
        type: OS::Neutron::Net
        properties:
          name: storperf-network

  storperf_subnet:
        type: OS::Neutron::Subnet
        properties:
          network_id: { get_resource: storperf_network }
          cidr: 172.16.0.0/16
          gateway_ip: 172.16.0.1

  storperf_network_router:
        type: OS::Neutron::Router
        properties:
          external_gateway_info:
                network: { get_param: public_network }

  storperf_network_router_interface:
        type: OS::Neutron::RouterInterface
        properties:
          router_id: { get_resource: storperf_network_router }
          subnet_id: { get_resource: storperf_subnet }


outputs:
  slave_ips: {
      description: "Slave addresses",
      value: { get_attr: [ slaves, storperf_agent_ip] }
  }
